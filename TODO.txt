----------------------------
TODO for version 0.2

* cleaner GUI:
	X * use the toolbar
	* add metajob status
	X * fix metajob progress
	X * add xgrid job table view
	* add metatask table view
	X * make sure Meta-Job is used consistently in the GUI

* allow the user to cancel the connection while trying to connect to a server

* when a task fail, should not let the data source treat the data, but should save results in a special 'failures folder'

* bug: cannot remove server from the GUI and the store

* when creating a new meta job, should check that it does not use an output folder shared with another metajob, in particular for the demo (otherwise, clicking Demo deletes all the stuff that another job is potentially using)

* problem with stdin!! it has to be included in the inputFiles...

* really honor -so and -se and -out

* really honor maxBytesPerSubmission in MetaJob submissions

* use the SQLLite format for the persistent store


X * bug in number of commands per submission: the number of commands per job is actually one more that set in the GUI and metajob attribute


----------------------------
TODO for version 0.3
* submit to several grids, take available agents into account
* refactor to better separate GridStuffer model and views, and to separate it from the app delegate --> ultimately a framework
 --> this means I will also need a separate class to play the role of the application delegate in the framework, e.g. class 'GridStufferInterface'
* the data source of a metajob should not have any idea of indexes, but just 'nextTask'. Or maybe leave the possibility for two types of data source, one called with indexes and one called using 'nextTask'.
* use a delegate with XGSServer
* probably entity names need also a suffix, like class names, if GridStuffer is going to be a framework..
* more comments in the class headers

----------------------------

* maybe the submission timer in meta jobs could be triggered only when needed --> in other words, use notifications rather than polling for job submissions

* run the job submission and retrieval in a different thread if too much spinning wheel...

* less